/* I chose to go with Verdana as a font as it is clear, easy to read and is commonly used in websites, making it ideal for this task. */

body {
  font-family: "Verdana";
  margin: 1em;
  column-count: 1;  column-width: auto;
background-color: #D3D3D3;

}
/* My original decision was to use either three or two columns with their width set to auto in order for the webpage to be responsive to different screen sizes. However I decided agains this as later I make use of the flex function along with the div function, to have self-sizing columns. This will increase the responsiveness of the webpage for use on other devices. */
p {background-color: #FFFFFF;
  column-count: 1;  column-width: auto;
margin: 3%
}

img {/*Though I originally used the hspace function to position the images in line with the text, using css is easier and applies to all images. I have made use of the border-radius function in order to make the images more aesthetically pleasing.*/
  border-radius: 8px;
  margin:3%;
}
menu{
border: 4px solid black;

}
      header {
        background-color: #00008B;
        height: 100px;
          margin: 5%;
}/*This colour scheme was chosen, as it is contrasting as well as aesthetically pleasing. This contrast will make for easier use, as well as giving it greater accessability*/
      h1 {
        background-color: #00008B;
        font-style: italic;
        text-align: center;
        color: white;
        line-height: 100px;
        margin: 0;
      }
       section{
         display:flex
}/*here i have made use of the flex function so that all the columns will respond and automatically enlarge and shrink to fit available space*/

  /*the use of a black border combined with the margins for each section of the page ensures that the columns are seperate enought that they will not be confused, making them easier to read. The contrast also brings attention to each one.*/

h2{
  margin:3%;
}
h3{
  margin:3%;
}/*Making use of the div function in tandem with the flex function allows for custom, self-sizing columns*/
div{
   padding: 10px;
        margin: 3%;/*using a percentage instead of a fixed number of pixels will make sure that the margin is not too large or to small on a bigger or smaller device*/
  border: 4px solid black;
  flex: 100px;/*i set the minimum flex size so that the content within each div would still be readable*/
}

  @media only screen and (max-width: 768px) {
  /* For mobile phones or older tablets: */
  div {
    max-width: 100%;
  }
@media only screen and (max-width: 768px) {
  row {
    max-width: 100%;
  }
    
    form{
    border: 4px solid black;
    margin: 3%;
    flex: 100px;
    padding: 10px;
    }
row{
  flex: 100px;
    }


footer {
  position: fixed;
  left: 0;
  bottom: 0;
  width: 100%;
  text-align: center;
}